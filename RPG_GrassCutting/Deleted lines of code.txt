Food.cs
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace RPG_GrassCutting
{

    public class Food
    {
        public int price = 0;
        public int quantity = 0;
        public int healthGain = 0;
        public int hungerGain = 0;
        //public string[] foodString = new string[4];
        public string foodString;

        public Food(int v1, int v2, int v3, int v4, string v5)
        {
            this.price = v1;
            this.quantity = v2;
            this.healthGain = v3;
            this.hungerGain = v4;
            this.foodString = v5;
        }

        //public Food (int kind)
        //{
        //    //kind = 2;
        //    //1= pizza. 2=lettuce,3=apple
        //    switch (kind)


        //    {
        //        case 1:
        //            price = 3;
        //            quantity = 8;
        //            healthGain = 0;
        //            hungerGain = 2;
        //            foodString = ($"Pizza Slice \r\n" +
        //                 $"Price : {price} \r\n" +
        //                 $"Quanity : {quantity} \r\n" +
        //                 $"Health Gain : {healthGain} \r\n" +
        //                 $"Hunger Gain : {hungerGain}");
        //            break;
        //        case 2:
        //            price = 2;
        //            quantity = 12;
        //            healthGain = 0;
        //            hungerGain = 1;
        //            foodString = ($"Donut \r\n" +
        //                $"Price : {price} \r\n" +
        //                $"Quanity : {quantity} \r\n" +
        //                $"Health Gain : {healthGain} \r\n" +
        //                $"Hunger Gain : {hungerGain}");
        //            break;

        //        case 3:
        //            price = 6;
        //            quantity = 2;
        //            healthGain = 1;
        //            hungerGain = 6;
        //            foodString = ($"BLT Sammy \r\n" +
        //                $"Price : {price} \r\n" +
        //                $"Quanity : {quantity} \r\n" +
        //                $"Health Gain : {healthGain} \r\n" +
        //                $"Hunger Gain : {hungerGain}");

        //            break;

        //        default:
        //            break;
        //    }

        //    //kind = 2;
        //    //1= pizza. 2=lettuce,3=apple
        //    switch (kind)


        //    {
        //        case 1:
        //            price = 3;
        //            quantity = 8;
        //            healthGain = 0;
        //            hungerGain = 2;
        //            foodString = ($"Pizza Slice \r\n" +
        //                 $"Price : {price} \r\n" +
        //                 $"Quanity : {quantity} \r\n" +
        //                 $"Health Gain : {healthGain} \r\n" +
        //                 $"Hunger Gain : {hungerGain}");
        //            break;
        //        case 2:
        //            price = 2;
        //            quantity = 12;
        //            healthGain = 0;
        //            hungerGain = 1;
        //            foodString = ($"Donut \r\n" +
        //                $"Price : {price} \r\n" +
        //                $"Quanity : {quantity} \r\n" +
        //                $"Health Gain : {healthGain} \r\n" +
        //                $"Hunger Gain : {hungerGain}");
        //            break;

        //        case 3:
        //            price = 6;
        //            quantity = 2;
        //            healthGain = 1;
        //            hungerGain = 6;
        //            foodString = ($"BLT Sammy \r\n" +
        //                $"Price : {price} \r\n" +
        //                $"Quanity : {quantity} \r\n" +
        //                $"Health Gain : {healthGain} \r\n" +
        //                $"Hunger Gain : {hungerGain}");

        //            break;

        //        default:
        //            break;
        //    }
        //}

    }
    //public class Pizza : Food
    //{
    //    public Pizza()
    //    {
    //        price = 10;
    //        quantity = 8;
    //        healthGain = 0;
    //        hungerGain = 2;
    //        foodString[0] = ($"Pizza \r\n" +
    //             $"Price : {price} \r\n" +
    //             $"Quanity : {quantity} \r\n" +
    //             $"Health Gain : {healthGain} \r\n" +
    //             $"Hunger Gain : {hungerGain}");
    //    }

    //}
    //public class Lettuce : Food
    //{
    //    public Lettuce()
    //    {
    //        price = 15;
    //        quantity = 3;
    //        healthGain = 0;
    //        hungerGain = 3;
    //        foodString[0] = ($"Lettuce \r\n" +
    //            $"Price : {price} \r\n" +
    //            $"Quanity : {quantity} \r\n" +
    //            $"Health Gain : {healthGain} \r\n" +
    //            $"Hunger Gain : {hungerGain}");
    //    }
    //}
    //public class Apple : Food
    //{
    //    public Apple()
    //    {
    //        price = 15;
    //        quantity = 2;
    //        healthGain = 1;
    //        hungerGain = 2;
    //        foodString[0] = ($"Apple \r\n" +
    //            $"Price : {price} \r\n" +
    //            $"Quanity : {quantity} \r\n" +
    //            $"Health Gain : {healthGain} \r\n" +
    //            $"Hunger Gain : {hungerGain}");

    //    }
    //    //public override double 
    //}
}


Program.cs

using System;
using System.IO;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace RPG_GrassCutting
{
    class Program
    {

        class Read
        {
            public string Ask(string _val)
            {
                Console.WriteLine(_val);

                return Console.ReadLine();
            }
        }

        static void Main(string[] args)
        {
            //Food pz = new Pizza(); 
            //Food lt = new Lettuce();
            //Food ap = new Apple();
            Player pl = new Player();
            Random rd = new Random();
            Read re = new Read();
            // 1 2 or 3 for each case
            Food pz1 = new Food(3, 8, 0, 2, ($"Pizza Slice"));
            // Assigns the value of v1 price v2 quanity etc etc
            Food dt1 = new Food(2, 12, 0, 1, ("Donut"));
            Food bs1 = new Food(6, 2, 1, 6, ("BLT Sammy"));
            Food[] foodArray = new Food[3] { pz1, dt1, bs1 };
            int foodRandomizer = rd.Next(0, 3);
            bool goHome = true;
            bool goBack = true;



            while (goHome == true)
            {
                goBack = true;
                Console.Clear();
                Console.WriteLine($"Rupees = {pl.rupees}");
                string buysellrentask = re.Ask("Welcome to my shop mighty traveler \r\nWould you like to Buy[1], Sell[2], Rent[3]? or go Home[g]? >");
                if (buysellrentask == "g" || buysellrentask == "G")
                {
                    goHome = false;
                    break;
                }
                int buysellrent = 0;
                Int32.TryParse(buysellrentask, out buysellrent);

                while (goBack == true)
                {
                    switch (buysellrent)
                    {
                        //Case for buying
                        case 1:
                            Console.Clear();

                            Console.WriteLine($"Rupees = {pl.rupees}");

                            Console.WriteLine("Here is what I have available for today!");
                            Console.WriteLine($"{foodArray[foodRandomizer].foodString}[1]\r\nFood2[2]\r\nFood3[3]\r\nor back to store front[b]");
                            string foodAsk = re.Ask("What would you like to do? >");
                            if (foodAsk == "b" || foodAsk == "b")
                            {
                                goBack = false;
                                break;
                            }
                            int foodSure = 0;
                            Int32.TryParse(foodAsk, out foodSure);

                            switch (foodSure)
                            {   //Food 1
                                case 1:
                                    Console.Clear();
                                    Console.WriteLine($"Rupees = {pl.rupees}");
                                    string purchaseAsk = re.Ask($"{foodArray[foodRandomizer].foodString}\r\n" +
                                    $"Price : {foodArray[foodRandomizer].price} \r\n" +
                                    $"Quanity : {foodArray[foodRandomizer].quantity} \r\n" +
                                    $"Health Gain : {foodArray[foodRandomizer].healthGain} \r\n" +
                                    $"Hunger Gain : {foodArray[foodRandomizer].hungerGain}\r\n" +
                                    $"Are you sure you would like to purchase this? [y] [n]? >");

                                    if ((purchaseAsk == "y" || purchaseAsk == "Y") && foodArray[foodRandomizer].quantity > 0)
                                    {
                                        foodArray[foodRandomizer].quantity -= 1;
                                        pl.rupees -= foodArray[foodRandomizer].price;
                                        Console.WriteLine($"Rupees = {pl.rupees}");

                                    }
                                    break;
                                //Food 2
                                case 2:

                                    break;
                                //Food 3
                                case 3:

                                    break;
                            }



                            break;
                        //Case for selling
                        case 2:

                            break;
                        //Case for renting
                        case 3:

                            break;
                    }
                }

            }
            Console.Clear();
            Console.WriteLine($"Rupees = {pl.rupees}");
            Console.WriteLine("You head home");
            //foodFix[0] = pz.foodString[0];
            //foodFix[1] = lt.foodString[0];
            //foodFix[2] = ap.foodString[0];

            //Console.WriteLine($"{pz.foodString[0]} \r\n {lt.foodString[1]} \r\n {ap.foodString[2]} ");
            //Console.WriteLine($"{foodFix[0]} \r\n \r\n{foodFix[1]} \r\n \r\n{foodFix[2]}");
            //Console.WriteLine(ap1.foodString);
            //Console.WriteLine(pz1.foodString[0]);
            //Console.WriteLine(lt1.foodString[0]);
            //Console.WriteLine(ap1.foodString[0]);
            Console.ReadKey();
        }
    }
}
